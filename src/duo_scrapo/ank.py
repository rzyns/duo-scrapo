from collections.abc import Iterable
from pathlib import Path
import sys

import anki
import anki.collection
import anki.models
import anki.notes
import anki.hooks

from rich import print  # noqa: A004

from duo_scrapo.Morf import VerbForms


class ModelAlreadyExistsError(Exception):
    def __init__(self, message: str = "Model already exists"):
        self.message = message
        super().__init__(self.message)


# Generated by Copilot
def add_fields_to_note_type(col: anki.collection.Collection, note_type: anki.models.NoteType, field_names: Iterable[str]) -> None:
    """
    Adds fields to the given NoteType in the provided Collection.

    Parameters:
    col (anki.collection.Collection): The Anki collection.
    note_type (anki.models.NoteType): The NoteType to which fields will be added.
    field_names (Iterable[str]): An iterable of field names to add to the NoteType.
    """
    mm = col.models
    for field_name in field_names:
        field = mm.new_field(field_name)
        mm.add_field(note_type, field)


def add_template(col: anki.collection.Collection, note_type: anki.models.NoteType, template_name: str, qfmt: str, afmt: str) -> None:
    """
    Adds a template to the given NoteType in the provided Collection.

    Parameters:
    col (anki.collection.Collection): The Anki collection.
    note_type (anki.models.NoteType): The NoteType to which the template will be added.
    template_name (str): The name of the template.
    qfmt (str): The question format.
    afmt (str): The answer format.
    """
    mm = col.models
    template = mm.new_template(template_name)
    template['qfmt'] = qfmt
    template['afmt'] = afmt
    note_type['tmpls'].append(template)


filepath = Path.cwd() / "output.anki2"
if filepath.exists():
    filepath.unlink()

col = anki.collection.Collection(filepath.as_posix())
czasowniki = col.models.by_name("Czasowniki")


if czasowniki is not None:
    raise ModelAlreadyExistsError()

if czasowniki is None:
    # Create a new Note Type using ModelManager
    mm = col.models
    new_note_type = mm.new("Czasowniki")

    # Add the new Note Type to the collection
    mm.add(new_note_type)

    # Add fields to the Note Type
    # mm.add_field(new_note_type, mm.new_field("Front"))
    # mm.add_field(new_note_type, mm.new_field("Back"))
    add_fields_to_note_type(col, new_note_type, ("pl", "en"))
    add_fields_to_note_type(col, new_note_type, VerbForms.get_cols())

    add_template(col, new_note_type, "Card 1", "{{en}}", "{{FrontSide}}<hr id=\"answer\">{{pl}}")


czasowniki = col.models.by_name("Czasowniki")
if czasowniki is None:
    print("Model not found")
    sys.exit(0)

outpath = Path.cwd() / "czasowniki.apkg"

col.export_anki_package(
    out_path=outpath.as_posix(),
    limit=None,
    options=anki.collection.ExportAnkiPackageOptions(),
)
